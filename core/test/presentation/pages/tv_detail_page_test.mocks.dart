// Mocks generated by Mockito 5.0.17 from annotations
// in core/test/presentation/pages/tv_detail_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;
import 'dart:ui' as _i4;

import 'package:core/core.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTvDetail_0 extends _i1.Fake implements _i2.GetTvDetail {}

class _FakeGetTvRecommendation_1 extends _i1.Fake
    implements _i2.GetTvRecommendation {}

class _FakeGetTvWatchListStatus_2 extends _i1.Fake
    implements _i2.GetTvWatchListStatus {}

class _FakeSaveTvWatchlist_3 extends _i1.Fake implements _i2.SaveTvWatchlist {}

class _FakeRemoveTvWatchlist_4 extends _i1.Fake
    implements _i2.RemoveTvWatchlist {}

class _FakeTvDetail_5 extends _i1.Fake implements _i2.TvDetail {}

/// A class which mocks [TvDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailNotifier extends _i1.Mock implements _i2.TvDetailNotifier {
  MockTvDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvDetail get getTvDetail =>
      (super.noSuchMethod(Invocation.getter(#getTvDetail),
          returnValue: _FakeGetTvDetail_0()) as _i2.GetTvDetail);
  @override
  _i2.GetTvRecommendation get getTvRecommendation => (super.noSuchMethod(
      Invocation.getter(#getTvRecommendation),
      returnValue: _FakeGetTvRecommendation_1()) as _i2.GetTvRecommendation);
  @override
  _i2.GetTvWatchListStatus get getTvWatchListStatus => (super.noSuchMethod(
      Invocation.getter(#getTvWatchListStatus),
      returnValue: _FakeGetTvWatchListStatus_2()) as _i2.GetTvWatchListStatus);
  @override
  _i2.SaveTvWatchlist get saveTvWatchlist =>
      (super.noSuchMethod(Invocation.getter(#saveTvWatchlist),
          returnValue: _FakeSaveTvWatchlist_3()) as _i2.SaveTvWatchlist);
  @override
  _i2.RemoveTvWatchlist get removeTvWatchlist =>
      (super.noSuchMethod(Invocation.getter(#removeTvWatchlist),
          returnValue: _FakeRemoveTvWatchlist_4()) as _i2.RemoveTvWatchlist);
  @override
  _i2.TvDetail get tv => (super.noSuchMethod(Invocation.getter(#tv),
      returnValue: _FakeTvDetail_5()) as _i2.TvDetail);
  @override
  _i2.RequestState get tvState =>
      (super.noSuchMethod(Invocation.getter(#tvState),
          returnValue: _i2.RequestState.Empty) as _i2.RequestState);
  @override
  List<_i2.Tv> get tvRecommendations =>
      (super.noSuchMethod(Invocation.getter(#tvRecommendations),
          returnValue: <_i2.Tv>[]) as List<_i2.Tv>);
  @override
  _i2.RequestState get recommendationState =>
      (super.noSuchMethod(Invocation.getter(#recommendationState),
          returnValue: _i2.RequestState.Empty) as _i2.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(Invocation.getter(#isAddedToWatchlist),
          returnValue: false) as bool);
  @override
  String get watchlistMessage =>
      (super.noSuchMethod(Invocation.getter(#watchlistMessage), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i3.Future<void> fetchTVDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#fetchTVDetail, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> addTvWatchlist(_i2.TvDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#addTvWatchlist, [tv]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> removeTvFromWatchlist(_i2.TvDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeTvFromWatchlist, [tv]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> loadTvWatchlistStatus(int? id) =>
      (super.noSuchMethod(Invocation.method(#loadTvWatchlistStatus, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  void addListener(_i4.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i4.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}

// Mocks generated by Mockito 5.0.17 from annotations
// in core/test/presentation/pages/tv_top_rated_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;
import 'dart:ui' as _i4;

import 'package:core/core.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTvTopRated_0 extends _i1.Fake implements _i2.GetTvTopRated {}

/// A class which mocks [TvTopRatedNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvTopRatedNotifier extends _i1.Mock
    implements _i2.TvTopRatedNotifier {
  MockTvTopRatedNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvTopRated get getTvTopRated =>
      (super.noSuchMethod(Invocation.getter(#getTvTopRated),
          returnValue: _FakeGetTvTopRated_0()) as _i2.GetTvTopRated);
  @override
  _i2.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i2.RequestState.empty) as _i2.RequestState);
  @override
  List<_i2.Tv> get tv =>
      (super.noSuchMethod(Invocation.getter(#tv), returnValue: <_i2.Tv>[])
          as List<_i2.Tv>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i3.Future<void> fetchTvTopRated() =>
      (super.noSuchMethod(Invocation.method(#fetchTvTopRated, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  void addListener(_i4.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i4.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
